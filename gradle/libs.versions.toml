[versions]
springBootVersion = '2.7.12'
springSecurityVersion = '5.7.9'

springCloudBomVersion = '2021.0.3'
springCloudVersion = "3.1.7"

swaggerVersion = '3.0.0'
swaggerAnnotationVersion = '1.6.3'

junitVersion = '5.7.2'
jacksonDataTypeJsr310Version = '2.12.3'

apacheCommonsLang3Version = "3.12.0"

apcaheBeansVersion = "1.9.4"

mapstructVersion = "1.4.2.Final"
mapstructLombokVersion = "0.2.0"

openFeignVersion = '11.2'
servletVersin = "3.1.0"

apacheCommonsVersion = '4.4'
apacheCommonsIoVersion = '2.4'

javaxValidationVersion = "2.0.1.Final"

hibernateCoreVersion = "6.5.2.Final"

micrometerRegirstyPrometheusVersion = '1.6.6'

springKafkaVersion = '2.8.2'
springKafkaTestVersion = "2.8.2"

libApiVersion = "1.1.0-SNAPSHOT"

javersVersion = "6.6.2"

hibernateTypes52Version = "2.12.1"

zonkySpringTestVersion = "2.1.1"
zonkyPostgreSQLVersion = "1.3.1"
preliquibaseVersion = "1.1.1"
liquibaseVersion = "4.6.1"

dozerVersion = "5.5.1"
javaxAnnotationVersion = "3.0.2"

postgresJdbcVersion = "42.2.24"

shedlockVersion = "4.46.0"

searchMapperVersion = "6.1.8.Final"
elasticClientSnifferVersion = "7.16.1"
elasticClientVersion = "7.16.1"

dynamicJasperVersion = "5.3.2"
jasperItextVersion = "2.1.7"
jasperReportsFontsVersion = "6.18.1"

poiOoxmlVersion = "5.2.5"

pdfboxVersion = "2.0.4"
jsoupVersion = "1.7.2"

googleGuavaVersion = "31.1-jre"

[libraries]
springConfigurationProcessor = { module = 'org.springframework.boot:spring-boot-configuration-processor', version.ref = "springBootVersion" }

springDataJpa = { module = 'org.springframework.boot:spring-boot-starter-data-jpa', version.ref = "springBootVersion" }

springAop = { module = 'org.springframework:spring-aop', version.ref = "springBootVersion" }

springCloudBootstrap = { module = 'org.springframework.cloud:spring-cloud-starter-bootstrap', version.ref = "springCloudVersion"}
springCloudSecurity = { module = 'org.springframework.cloud:spring-cloud-starter-oauth2'}
springCloudDependencies = { module = 'org.springframework.cloud:spring-cloud-dependencies', version.ref = "springCloudBomVersion" }
springCloudFeign = { module = 'org.springframework.cloud:spring-cloud-starter-openfeign', version.ref = "springCloudVersion" }

springBoot = { module = 'org.springframework.boot:spring-boot', version.ref = "springBootVersion" }
springBootAutoconfigure = { module = 'org.springframework.boot:spring-boot-autoconfigure', version.ref = "springBootVersion" }
springBootStarterWeb = { module = 'org.springframework.boot:spring-boot-starter-web', version.ref = "springBootVersion" }
springBootStarterAop = { module = 'org.springframework.boot:spring-boot-starter-aop', version.ref = "springBootVersion" }

springBootStarterTest = { module = 'org.springframework.boot:spring-boot-starter-test', version.ref = "springBootVersion" }

springSecurityCore = { module = 'org.springframework.security:spring-security-core', version.ref = "springSecurityVersion" }
springBootStarterSecurity = { module = 'org.springframework.boot:spring-boot-starter-security', version.ref = 'springBootVersion'}

jupiterApi = { module = 'org.junit.jupiter:junit-jupiter-api', version.ref = "junitVersion" }
jupiterEngine = { module = 'org.junit.jupiter:junit-jupiter-engine', version.ref = "junitVersion" }

hibernateCore = { module = 'org.hibernate:hibernate-core', version.ref = "hibernateCoreVersion" }

javaxValidation = { module = 'javax.validation:validation-api', version.ref = "javaxValidationVersion" }
springBootStarterValidation = { module = 'org.springframework.boot:spring-boot-starter-validation', version.ref = "springBootVersion"}

jacksonDatatype = { module = 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310', version.ref = "jacksonDataTypeJsr310Version" }

servlet = { module = 'javax.servlet:javax.servlet-api', version.ref = "servletVersin" }
apacheCommons = { module = 'org.apache.commons:commons-collections4', version.ref = "apacheCommonsVersion" }
apacheCommonsIo = { module = 'org.apache.directory.studio:org.apache.commons.io', version.ref = "apacheCommonsIoVersion" }
apacheCommonsLang3 = { module = "org.apache.commons:commons-lang3", version.ref = "apacheCommonsLang3Version" }
commonsBbeanutils = { module = 'commons-beanutils:commons-beanutils', version.ref = "apcaheBeansVersion" }

mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstructVersion" }
mapstructProcessor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstructVersion" }
mapstructLombok = { module = "org.projectlombok:lombok-mapstruct-binding", version.ref = "mapstructLombokVersion" }
swaggerAnnotation = { module = "io.swagger:swagger-annotations", version.ref = "swaggerAnnotationVersion" }
swagger = { module = "io.springfox:springfox-swagger2", version.ref = "swaggerVersion" }


libBaseApi = { module = "ru.morningcake:lib-api-base", version.ref = "libApiVersion" }

zonkySpringTest = { module = "io.zonky.test:embedded-database-spring-test", version.ref = "zonkySpringTestVersion" }
zonkyPostgreSQL = { module = "io.zonky.test:embedded-postgres", version.ref = "zonkyPostgreSQLVersion" }

javaxAnnotation = { module = "com.google.code.findbugs:jsr305", version.ref = "javaxAnnotationVersion" }

hibernateTypes52 = { module = "com.vladmihalcea:hibernate-types-52", version.ref = "hibernateTypes52Version" }

preliquibase = { module = "net.lbruun.springboot:preliquibase-spring-boot-starter", version.ref = "preliquibaseVersion" }
liquibase = { module = "org.liquibase:liquibase-core", version.ref = "liquibaseVersion" }

postgresJdbc = { module = "org.postgresql:postgresql", version.ref = "postgresJdbcVersion" }

shedlockProvider = {module = "net.javacrumbs.shedlock:shedlock-provider-jdbc-template", version.ref = "shedlockVersion"}
shedlockSpring = {module = "net.javacrumbs.shedlock:shedlock-spring", version.ref = "shedlockVersion"}

googleGuava = { module = "com.google.guava:guava", version.ref = "googleGuavaVersion" }

[bundles]
springCloud = ["springCloudBootstrap"]
springCloudSecurity = ["springCloudSecurity"]
springCloudDependencies = ["springCloudDependencies"]

springBase = ["springBoot", "springBootAutoconfigure", "springBootStarterWeb"]
springDataJpa = ["springDataJpa"]
springConfigurationProcessor = ["springConfigurationProcessor"]

apacheCommons = ["apacheCommonsLang3", "apacheCommons", "apacheCommonsIo"]
commonsBbeanutils = ["commonsBbeanutils"]

servlet = ["servlet"]

validation = ["javaxValidation", "springBootStarterValidation"]

test = ["springBootStarterTest", "jupiterApi", "jupiterEngine", "zonkySpringTest", "zonkyPostgreSQL"]

mapstruct = ["mapstruct", "mapstructProcessor", "mapstructLombok"]
mapstructLombok = ["mapstruct", "mapstructLombok"]
swagger = ["swagger", "swaggerAnnotation"]

shedlock = ["shedlockProvider", "shedlockSpring"]